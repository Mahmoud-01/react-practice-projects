{"version":3,"sources":["components/Calculator/Styled/index.js","components/Calculator/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Screen","Previous","Current","Button","button","gridSpanA","gridSpanB","operation","control","equals","Calculator","useState","current","setCurrent","previous","setPrevious","setOperation","appendValue","el","value","target","getAttribute","includes","chooseOperation","compute","result","previousNumber","parseFloat","currentNumber","isNaN","onClick","String","slice","data","undefined","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fcd94a4.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    display: grid;\r\n    justify-content: center;\r\n    align-content: center;\r\n    width: 400px;\r\n    margin: 40px auto;\r\n    grid-template-columns: repeat(4, 100px);\r\n    grid-template-rows: minmax(120px, auto) repeat(5, 100px);\r\n    box-shadow: 2px 2px 10px #333;\r\n    border-radius: 10px;\r\n`\r\n\r\nexport const Screen = styled.div`\r\n    grid-column: 1 / -1;\r\n    background-color: rgba(60, 64, 67, 0.75);\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    word-wrap: break-word;\r\n    word-break: break-all;\r\n    text-align: right;\r\n    border-top-left-radius: 10px;\r\n    border-top-right-radius: 10px;\r\n`\r\n\r\nexport const Previous = styled.div`\r\n    color: rgba(255, 255, 255, 0.75);\r\n    font-size: 1.5rem;\r\n`\r\nexport const Current = styled.div`\r\n    color: #ffff;\r\n    font-size: 2.5rem;\r\n`\r\nexport const Button = styled.button`\r\n    cursor: pointer;\r\n    font-size: 2rem;\r\n    border: 1px outset white;\r\n    outline: none;\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    &:hover{\r\n        background-color: rgba(255, 255, 255, 0.9);\r\n    }\r\n\r\n    \r\n\r\n    ${({gridSpanA}) => gridSpanA && `grid-column: span ${gridSpanA}; background-color: skyblue;`}\r\n    ${({gridSpanB}) => gridSpanB && `grid-column: span ${gridSpanB}; border-bottom-right-radius: 10px; background-color: gray;`}\r\n\r\n    ${({operation}) => operation && `background-color: gray;`}\r\n    ${({control}) => control && `background-color: skyblue;`}\r\n    ${({equals}) => equals && `border-bottom-right-radius: 10px; background-color: gray;`} \r\n\r\n`","import React, {useState} from 'react';\r\nimport { Button, Container, Current, Previous, Screen } from './Styled';\r\n\r\nexport default function Calculator(){\r\n\r\n    const [current,  setCurrent] = useState('');\r\n    const [previous, setPrevious] = useState('');\r\n    const [operation, setOperation] = useState('');\r\n\r\n    const appendValue = (el) => {\r\n        const value = el.target.getAttribute('data');\r\n        if(value === '.' && current.includes('.')) return\r\n        setCurrent(current + value);\r\n    }\r\n\r\n    const handleDelete =() =>{\r\n        setCurrent(String(current).slice(0, -1));\r\n    }\r\n\r\n    const allClear =() =>{\r\n        setCurrent('')\r\n        setPrevious('')\r\n        setOperation('')\r\n    }\r\n\r\n    const chooseOperation =(el) =>{\r\n        if(current === '') return\r\n        if(previous !== ''){\r\n            let value = compute();\r\n            setPrevious(value)\r\n        }else{\r\n            setPrevious(current)\r\n        }\r\n        setCurrent('')\r\n        setOperation(el.target.getAttribute('data'))\r\n    }\r\n\r\n    const equals =() =>{\r\n        let value = compute();\r\n        if(value === undefined || value ===  null) return\r\n\r\n        setCurrent(value)\r\n        setPrevious('')\r\n        setOperation('')\r\n    }\r\n\r\n    const compute =() =>{\r\n        let result;\r\n        let previousNumber = parseFloat(previous);\r\n        let currentNumber = parseFloat(current);\r\n\r\n        if(isNaN(previousNumber) || isNaN(currentNumber)) return\r\n\r\n        switch(operation){\r\n            case 'รท':\r\n                result = previousNumber / currentNumber;\r\n                break;\r\n            case 'x':\r\n                result = previousNumber * currentNumber;\r\n                break;\r\n            case '+':\r\n                result = previousNumber + currentNumber;\r\n                break;\r\n            case '-':\r\n                result = previousNumber - currentNumber;\r\n                break;\r\n            default:\r\n                return\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Screen>\r\n                <Previous>{previous} {operation}</Previous>\r\n                <Current>{current}</Current>\r\n            </Screen>\r\n            <Button onClick={allClear}gridSpanA={2}>AC</Button>\r\n            <Button onClick={handleDelete}control>DEL</Button>\r\n            <Button data={'รท'}onClick={chooseOperation}operation>รท</Button>\r\n            <Button data={'7'} onClick={appendValue}>7</Button>\r\n            <Button data={'8'} onClick={appendValue}>8</Button>\r\n            <Button data={'9'} onClick={appendValue}>9</Button>\r\n            <Button data={'x'}onClick={chooseOperation}operation>x</Button>\r\n            <Button data={'4'} onClick={appendValue}>4</Button>\r\n            <Button data={'5'} onClick={appendValue}>5</Button>\r\n            <Button data={'6'} onClick={appendValue}>6</Button>\r\n            <Button data={'+'}onClick={chooseOperation}operation>+</Button>\r\n            <Button data={'1'} onClick={appendValue}>1</Button>\r\n            <Button data={'2'} onClick={appendValue}>2</Button>\r\n            <Button data={'3'} onClick={appendValue}>3</Button>\r\n            <Button data={'-'}onClick={chooseOperation}operation>-</Button>\r\n            <Button control data={'.'} onClick={appendValue}>.</Button>\r\n            <Button data={'0'} onClick={appendValue}>0</Button>\r\n            <Button onClick={equals}gridSpanB={2}>=</Button>\r\n        </Container>\r\n    )\r\n}","import Calculator from './components/Calculator';\n\nfunction App() {\n  return (\n    <Calculator />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}